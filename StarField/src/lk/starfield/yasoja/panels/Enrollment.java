/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package lk.starfield.yasoja.panels;

import java.awt.Color;
import java.awt.Font;
import java.awt.event.KeyEvent;
import raven.toast.Notifications;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.HashMap;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFrame;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import lk.starfield.yasoja.connection.Mysql;
import lk.starfield.yasoja.dialogs.Select_Unassigned_Class;
import lk.starfield.yasoja.main_components.roundTextField;
import lk.starfield.yasoja.validation.Valid_Status;

/**
 *
 * @author dnana
 */
public class Enrollment extends javax.swing.JPanel {

    JFrame parentFrame;
    HashMap<String, String> subjectMap = new HashMap<>();

    public Enrollment(JFrame parent) {
        initComponents();
        loadTable();
        loadSubjects();
        parentFrame = parent;
        Notifications.getInstance().setJFrame(parentFrame);
        
    }

    private void loadSubjects() {
        try {
            ResultSet resultSet = Mysql.search("SELECT * FROM `subject`");

            Vector v = new Vector();
            v.add("Select Subject");
            while (resultSet.next()) {
                v.add(resultSet.getString("name"));
                subjectMap.put(resultSet.getString("name"), resultSet.getString("id"));
            }
            DefaultComboBoxModel m = new DefaultComboBoxModel(v);
            jComboBox1.setModel(m);

        } catch (Exception e) {
            System.out.println(e);
        }
    }

    private void loadTable() {

        JTableHeader tableHeader = jTable1.getTableHeader();
        Font headerFont = new Font("Microsoft JhengHei ", Font.BOLD, 16);
        Color THcolorBg = new Color(6, 52, 119);
        Color THcolotFont = new Color(255, 255, 255);
        tableHeader.setBackground(THcolorBg);
        tableHeader.setForeground(THcolotFont);
        tableHeader.setFont(headerFont);
        jTable1.setTableHeader(tableHeader);

        DefaultTableCellRenderer columnRenderer = new DefaultTableCellRenderer();
        columnRenderer.setHorizontalAlignment(SwingConstants.CENTER);

        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);
        for (int columnIndex = 0; columnIndex < model.getColumnCount(); columnIndex++) {
            jTable1.getColumnModel().getColumn(columnIndex).setCellRenderer(columnRenderer);
        }

        try {
            ResultSet enrolled_classes = Mysql.search("SELECT DISTINCT(`batch`.`name`),`subject`.`name`,"
                    + "`day`,`start_time`,`end_time`,`teacher`.`fname`,`teacher`.`lname`,`status`.`status` FROM `student`"
                    + "INNER JOIN `class_enroll` ON `student`.`id`=`class_enroll`.`student_id`"
                    + "INNER JOIN `class` ON `class_enroll`.`class_id`=`class`.`id`"
                    + "INNER JOIN `status` ON `class`.`status_id`=`status`.`id`"
                    + "INNER JOIN `class_day` ON `class`.`class_day_id`=`class_day`.`id`"
                    + "INNER JOIN `teacher` ON `class`.`teacher_id`=`teacher`.`id`"
                    + "INNER JOIN `subject` ON `teacher`.`subject_id`=`subject`.`id`"
                    + "INNER JOIN `batch` ON `student`.`batch_id`=`batch`.`id` "
                    + "WHERE `class`.`status_id`='3' OR `class`.`status_id`='4' ");

            while (enrolled_classes.next()) {

                Vector v = new Vector();
                v.add(enrolled_classes.getString("subject.name"));
                v.add(enrolled_classes.getString("fname") + " " + enrolled_classes.getString("lname"));
                v.add(enrolled_classes.getString("day"));
                v.add(enrolled_classes.getString("start_time") + "-" + enrolled_classes.getString("end_time"));
                v.add(enrolled_classes.getString("status.status"));
                v.add(enrolled_classes.getString("batch.name"));

                model.addRow(v);
                jTable1.setModel(model);

            }

        } catch (SQLException e) {
            throw new RuntimeException(e);
        }

    }

    public roundTextField getClassID() {
        return classID;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        background1 = new lk.starfield.yasoja.main_components.Background();
        background2 = new lk.starfield.yasoja.main_components.Background();
        roundButton4 = new lk.starfield.yasoja.main_components.roundButton();
        Name = new lk.starfield.yasoja.main_components.roundTextField();
        jLabel7 = new javax.swing.JLabel();
        Start = new lk.starfield.yasoja.main_components.roundTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        End = new lk.starfield.yasoja.main_components.roundTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel12 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        background4 = new lk.starfield.yasoja.main_components.Background();
        roundButton5 = new lk.starfield.yasoja.main_components.roundButton();
        jLabel9 = new javax.swing.JLabel();
        background5 = new lk.starfield.yasoja.main_components.Background();
        circle3 = new lk.starfield.yasoja.main_components.Circle();
        circle1 = new lk.starfield.yasoja.main_components.Circle();
        circle2 = new lk.starfield.yasoja.main_components.Circle();
        classID = new lk.starfield.yasoja.main_components.roundTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        batchID2 = new lk.starfield.yasoja.main_components.roundTextField();
        jLabel5 = new javax.swing.JLabel();
        batchName = new lk.starfield.yasoja.main_components.roundTextField();
        jSeparator2 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        background1.setBackground(new java.awt.Color(255, 255, 255));

        background2.setBackground(new java.awt.Color(231, 231, 233));

        roundButton4.setBackground(new java.awt.Color(165, 199, 249));
        roundButton4.setForeground(new java.awt.Color(6, 52, 119));
        roundButton4.setText("Search Class");
        roundButton4.setFocusable(false);
        roundButton4.setFont(new java.awt.Font("Microsoft JhengHei", 1, 14)); // NOI18N
        roundButton4.setPreferredSize(new java.awt.Dimension(164, 30));
        roundButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roundButton4ActionPerformed(evt);
            }
        });

        Name.setBackground(new java.awt.Color(255, 255, 255));
        Name.setForeground(new java.awt.Color(51, 51, 51));

        jLabel7.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(51, 51, 51));
        jLabel7.setText("Start Time");

        Start.setBackground(new java.awt.Color(255, 255, 255));
        Start.setForeground(new java.awt.Color(51, 51, 51));

        jLabel8.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(51, 51, 51));
        jLabel8.setText("Subject");

        jLabel6.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(51, 51, 51));
        jLabel6.setText("End Time");

        End.setBackground(new java.awt.Color(255, 255, 255));
        End.setForeground(new java.awt.Color(51, 51, 51));

        jSeparator1.setForeground(new java.awt.Color(0, 0, 0));

        jLabel12.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(51, 51, 51));
        jLabel12.setText("Batch Name");

        jComboBox1.setBackground(new java.awt.Color(255, 255, 255));
        jComboBox1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jComboBox1.setForeground(new java.awt.Color(0, 0, 0));
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout background2Layout = new javax.swing.GroupLayout(background2);
        background2.setLayout(background2Layout);
        background2Layout.setHorizontalGroup(
            background2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(background2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSeparator1)
                .addContainerGap())
            .addGroup(background2Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(background2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel12)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(Start, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel6)
                    .addComponent(Name, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(End, javax.swing.GroupLayout.DEFAULT_SIZE, 205, Short.MAX_VALUE)
                    .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(10, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, background2Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(roundButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
        );
        background2Layout.setVerticalGroup(
            background2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(background2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Name, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Start, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel6)
                .addGap(13, 13, 13)
                .addComponent(End, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(roundButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16))
        );

        background4.setBackground(new java.awt.Color(231, 231, 233));

        roundButton5.setBackground(new java.awt.Color(192, 218, 255));
        roundButton5.setForeground(new java.awt.Color(30, 0, 215));
        roundButton5.setText("Enroll into a Class");
        roundButton5.setFocusable(false);
        roundButton5.setFont(new java.awt.Font("Microsoft JhengHei", 1, 14)); // NOI18N
        roundButton5.setPreferredSize(new java.awt.Dimension(164, 30));
        roundButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roundButton5ActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Microsoft JhengHei", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(51, 51, 51));
        jLabel9.setText("Select Class");

        background5.setBackground(new java.awt.Color(255, 255, 255));
        background5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                background5MouseClicked(evt);
            }
        });

        circle3.setBackground(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout circle3Layout = new javax.swing.GroupLayout(circle3);
        circle3.setLayout(circle3Layout);
        circle3Layout.setHorizontalGroup(
            circle3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );
        circle3Layout.setVerticalGroup(
            circle3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );

        circle1.setBackground(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout circle1Layout = new javax.swing.GroupLayout(circle1);
        circle1.setLayout(circle1Layout);
        circle1Layout.setHorizontalGroup(
            circle1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );
        circle1Layout.setVerticalGroup(
            circle1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );

        circle2.setBackground(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout circle2Layout = new javax.swing.GroupLayout(circle2);
        circle2.setLayout(circle2Layout);
        circle2Layout.setHorizontalGroup(
            circle2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );
        circle2Layout.setVerticalGroup(
            circle2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout background5Layout = new javax.swing.GroupLayout(background5);
        background5.setLayout(background5Layout);
        background5Layout.setHorizontalGroup(
            background5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(background5Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(circle3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(circle1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(circle2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        background5Layout.setVerticalGroup(
            background5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, background5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(background5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(circle2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(circle1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(circle3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        classID.setBackground(new java.awt.Color(255, 255, 255));
        classID.setForeground(new java.awt.Color(51, 51, 51));
        classID.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jLabel10.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(51, 51, 51));
        jLabel10.setText("Class ID");

        jLabel11.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(51, 51, 51));
        jLabel11.setText("Batch ID");

        batchID2.setEditable(false);
        batchID2.setBackground(new java.awt.Color(255, 255, 255));
        batchID2.setForeground(new java.awt.Color(51, 51, 51));
        batchID2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(51, 51, 51));
        jLabel5.setText("Batch Name");

        batchName.setBackground(new java.awt.Color(255, 255, 255));
        batchName.setForeground(new java.awt.Color(51, 51, 51));
        batchName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                batchNameKeyReleased(evt);
            }
        });

        jSeparator2.setForeground(new java.awt.Color(0, 0, 0));
        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);

        javax.swing.GroupLayout background4Layout = new javax.swing.GroupLayout(background4);
        background4.setLayout(background4Layout);
        background4Layout.setHorizontalGroup(
            background4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, background4Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel11)
                .addGap(18, 18, 18)
                .addComponent(batchID2, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(batchName, javax.swing.GroupLayout.DEFAULT_SIZE, 205, Short.MAX_VALUE)
                .addGap(79, 79, 79)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(57, 57, 57)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(background5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(classID, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(62, 62, 62)
                .addComponent(roundButton5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
        );
        background4Layout.setVerticalGroup(
            background4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(background4Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(background4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(background4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(background4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(classID, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10)
                            .addComponent(batchID2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11)
                            .addComponent(jLabel5)
                            .addComponent(batchName, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, background4Layout.createSequentialGroup()
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(background5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(6, 6, 6)))
                    .addComponent(roundButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(15, Short.MAX_VALUE))
            .addGroup(background4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSeparator2)
                .addContainerGap())
        );

        jTable1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Subject", "Teacher's Name ", "Class Day/s", "Time Peroid", "Class Status", "Batch"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(140);
            jTable1.getColumnModel().getColumn(0).setMaxWidth(160);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(190);
            jTable1.getColumnModel().getColumn(1).setMaxWidth(280);
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(110);
            jTable1.getColumnModel().getColumn(2).setMaxWidth(150);
            jTable1.getColumnModel().getColumn(3).setPreferredWidth(190);
            jTable1.getColumnModel().getColumn(3).setMaxWidth(210);
            jTable1.getColumnModel().getColumn(4).setPreferredWidth(110);
            jTable1.getColumnModel().getColumn(4).setMaxWidth(150);
            jTable1.getColumnModel().getColumn(5).setPreferredWidth(120);
            jTable1.getColumnModel().getColumn(5).setMaxWidth(160);
        }

        javax.swing.GroupLayout background1Layout = new javax.swing.GroupLayout(background1);
        background1.setLayout(background1Layout);
        background1Layout.setHorizontalGroup(
            background1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(background1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(background1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(background1Layout.createSequentialGroup()
                        .addComponent(background2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1))
                    .addComponent(background4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        background1Layout.setVerticalGroup(
            background1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(background1Layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(background4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(background1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 440, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(background2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(45, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(background1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(background1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void roundButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roundButton4ActionPerformed
        String batch_name = Name.getText();
        String subject = String.valueOf(jComboBox1.getSelectedItem());
        String start_time = Start.getText();
        String end_time = End.getText();

        String subjectID = subjectMap.get(subject);

        String query = "SELECT DISTINCT(`batch`.`name`),`subject`.`name`,"
                + "`day`,`start_time`,`end_time`,`teacher`.`fname`,`teacher`.`lname`,`status`.`status` FROM `student`"
                + "INNER JOIN `class_enroll` ON `student`.`id`=`class_enroll`.`student_id`"
                + "INNER JOIN `class` ON `class_enroll`.`class_id`=`class`.`id`"
                + "INNER JOIN `status` ON `class`.`status_id`=`status`.`id`"
                + "INNER JOIN `class_day` ON `class`.`class_day_id`=`class_day`.`id`"
                + "INNER JOIN `teacher` ON `class`.`teacher_id`=`teacher`.`id`"
                + "INNER JOIN `subject` ON `teacher`.`subject_id`=`subject`.`id`"
                + "INNER JOIN `batch` ON `student`.`batch_id`=`batch`.`id` "
                + "WHERE (`class`.`status_id`='3' OR `class`.`status_id`='4') ";

        if (batch_name.isBlank()) {

            if (subject.equals("Select Subject") && start_time.isBlank() && end_time.isBlank()) {
                Notifications.getInstance().show(Notifications.Type.WARNING,
                        Notifications.Location.TOP_CENTER, "Please Enter details to search");
                loadTable();
            } else if (subject.equals("Select Subject") && !start_time.isBlank() && end_time.isBlank()) {

                query = query + "AND `start_time` LIKE '" + start_time + "%' ";

            } else if (subject.equals("Select Subject") && start_time.isBlank() && !end_time.isBlank()) {
                query = query + " AND `end_time` LIKE '" + end_time + "%'";
            } else if (!subject.equals("Select Subject") && start_time.isBlank() && end_time.isBlank()) {
                query = query + "AND `subject_id` = '" + subjectID + "'";
            } else if (subject.equals("Select Subject") && !start_time.isBlank() && end_time.isBlank()) {
                query = query + "AND `subject_id` = '" + subjectID + "' AND `start_time` LIKE '" + start_time + "%'";
            } else if (subject.equals("Select Subject") && start_time.isBlank() && !end_time.isBlank()) {
                query = query + "AND `subject_id` = '" + subjectID + "' AND `end_time` LIKE '" + end_time + "%'";
            } else {
                loadTable();
            }

        } else {

            try {
                ResultSet rs = Mysql.search("SELECT * FROM `batch` WHERE `name` LIKE '" + batch_name + "%' ");
                if (rs.next()) {
                    String batch_id = rs.getString("id");

                    if (subject.equals("Select Subject") && start_time.isBlank() && end_time.isBlank()) {
                        query = query + "AND `batch_id` = '" + batch_id + "' ";
                    } else if (subject.equals("Select Subject") && !start_time.isBlank() && end_time.isBlank()) {

                        query = query + "AND `batch_id` = '" + batch_id + "' AND `start_time` LIKE '" + start_time + "%' ";

                    } else if (subject.equals("Select Subject") && start_time.isBlank() && !end_time.isBlank()) {

                        query = query + "AND `batch_id` = '" + batch_id + "' AND `end_time` LIKE '" + end_time + "%'";

                    } else if (!subject.equals("Select Subject") && start_time.isBlank() && end_time.isBlank()) {

                        query = query + "AND `batch_id` = '" + batch_id + "' AND `subject_id` = '" + subjectID + "'";

                    } else if (subject.equals("Select Subject") && !start_time.isBlank() && end_time.isBlank()) {

                        query = query + "AND `batch_id` = '" + batch_id + "' AND `subject_id` = '" + subjectID + "'"
                                + " AND `start_time` LIKE '" + start_time + "%'";

                    } else if (subject.equals("Select Subject") && start_time.isBlank() && !end_time.isBlank()) {

                        query = query + "AND `batch_id` = '" + batch_id + "' AND `subject_id` = '" + subjectID + "'"
                                + " AND `end_time` LIKE '" + end_time + "%'";
                    } else {
                        loadTable();
                    }
                } else {
                    Notifications.getInstance().show(Notifications.Type.WARNING,
                            Notifications.Location.TOP_CENTER, "Please Enter a correct batch name");
                }

            } catch (SQLException e) {
                throw new RuntimeException(e);
            }
        }

        try {
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            model.setRowCount(0);

            ResultSet rs = Mysql.search(query);
            while (rs.next()) {

                Vector v = new Vector();
                v.add(rs.getString("subject.name"));
                v.add(rs.getString("fname") + " " + rs.getString("lname"));
                v.add(rs.getString("day"));
                v.add(rs.getString("start_time") + "-" + rs.getString("end_time"));
                v.add(rs.getString("status.status"));
                v.add(rs.getString("batch.name"));

                model.addRow(v);
                jTable1.setModel(model);
            }

        } catch (SQLException e) {
            throw new RuntimeException(e);
        }
    }//GEN-LAST:event_roundButton4ActionPerformed

    private void roundButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roundButton5ActionPerformed
        String batch_id = batchID2.getText();
        String Cno = classID.getText();

        try {
            ResultSet batch = Mysql.search("SELECT * FROM `batch` WHERE `batch`.`id`='" + batch_id + "'");
            ResultSet class_rs = Mysql.search("SELECT * FROM `class` WHERE `id`='" + Cno + "' ");

            if (batch_id.isBlank()) {
                Notifications.getInstance().show(Notifications.Type.WARNING,
                        Notifications.Location.TOP_CENTER, "Please select a batch");
            } else if (!batch.next()) {
                Notifications.getInstance().show(Notifications.Type.WARNING,
                        Notifications.Location.TOP_CENTER, "Batch ID does not match any reistered Data");
            }else if (Cno.isBlank()) {
                Notifications.getInstance().show(Notifications.Type.WARNING,
                        Notifications.Location.TOP_CENTER, "Please select a class");
            } else if (!class_rs.next()) {
                Notifications.getInstance().show(Notifications.Type.WARNING,
                        Notifications.Location.TOP_CENTER, "Class ID does not match any reistered Data");
            } else {

                ResultSet students = Mysql.search("SELECT * FROM `student` WHERE `batch_id`='" + batch_id + "' ");

                while (students.next()) {
                    String STno = students.getString("id");
                    Mysql.iud("INSERT INTO `class_enroll` (`class_id`,`student_id`,`payment_status`)"
                            + "VALUES ('" + Cno + "','" + STno + "','6')");
                }
                Mysql.iud("UPDATE `class` SET `status_id`='3' WHERE `id`='"+Cno+"' ");

                Notifications.getInstance().show(Notifications.Type.SUCCESS,
                        Notifications.Location.TOP_CENTER, "Batch enrolled successfully");
                loadTable();
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_roundButton5ActionPerformed

    private void background5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_background5MouseClicked
        new Select_Unassigned_Class(parentFrame, true, this).setVisible(true);
    }//GEN-LAST:event_background5MouseClicked

    private void batchNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_batchNameKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            String batch_name = batchName.getText();

            try {
                ResultSet rs = Mysql.search("SELECT * FROM `batch` WHERE `name` LIKE '" + batch_name + "%' ");

                if (rs.next()) {
                    batchID2.setText(rs.getString("id"));
                } else {
                    batchID2.setText("");
                }

            } catch (Exception e) {
                throw new RuntimeException(e);
            }
        }
    }//GEN-LAST:event_batchNameKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private lk.starfield.yasoja.main_components.roundTextField End;
    private lk.starfield.yasoja.main_components.roundTextField Name;
    private lk.starfield.yasoja.main_components.roundTextField Start;
    private lk.starfield.yasoja.main_components.Background background1;
    private lk.starfield.yasoja.main_components.Background background2;
    private lk.starfield.yasoja.main_components.Background background4;
    private lk.starfield.yasoja.main_components.Background background5;
    private lk.starfield.yasoja.main_components.roundTextField batchID2;
    private lk.starfield.yasoja.main_components.roundTextField batchName;
    private lk.starfield.yasoja.main_components.Circle circle1;
    private lk.starfield.yasoja.main_components.Circle circle2;
    private lk.starfield.yasoja.main_components.Circle circle3;
    private lk.starfield.yasoja.main_components.roundTextField classID;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTable jTable1;
    private lk.starfield.yasoja.main_components.roundButton roundButton4;
    private lk.starfield.yasoja.main_components.roundButton roundButton5;
    // End of variables declaration//GEN-END:variables
}

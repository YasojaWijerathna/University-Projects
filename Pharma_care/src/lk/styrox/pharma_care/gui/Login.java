/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package lk.styrox.pharma_care.gui;

import com.formdev.flatlaf.themes.FlatMacLightLaf;
import lk.styrox.pharma_care.validation.Validation;
import raven.toast.Notifications;
import java.sql.*;
import javax.swing.ImageIcon;
import lk.styrox.pharma_care.connection.Mysql;
import lk.styrox.pharma_care.logger.Logger;
import lk.styrox.pharma_care.validation.Valid_Status;
import lk.styrox.pharma_care.validation.Valid_User;

/**
 *
 * @author dnana
 */
public class Login extends javax.swing.JFrame {

    public static String USER_ID = "";
    public static String USER_TYPE="";

    public Login() {
        initComponents();
        init();
    }

    private void init() {
        ImageIcon icon = new ImageIcon(getClass().getResource("/lk/styrox/pharma_care/img/pharma_icon.jpg"));
        this.setIconImage(icon.getImage());
        Notifications.getInstance().setJFrame(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        background1 = new lk.styrox.pharma_care.main_components.Background();
        jLabel2 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        login_splash1 = new lk.styrox.pharma_care.sub_components.Login_splash();
        roundButton1 = new lk.styrox.pharma_care.main_components.roundButton();
        roundTextField1 = new lk.styrox.pharma_care.main_components.roundTextField();
        roundPasswordField1 = new lk.styrox.pharma_care.main_components.roundPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        background1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel2.setFont(new java.awt.Font("Monospaced", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(207, 22, 180));
        jLabel2.setText("Login");

        jSeparator1.setForeground(new java.awt.Color(207, 22, 180));

        jLabel3.setFont(new java.awt.Font("Monospaced", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(102, 102, 102));
        jLabel3.setText("Username");

        jLabel4.setFont(new java.awt.Font("Monospaced", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(102, 102, 102));
        jLabel4.setText("Password");

        javax.swing.GroupLayout login_splash1Layout = new javax.swing.GroupLayout(login_splash1);
        login_splash1.setLayout(login_splash1Layout);
        login_splash1Layout.setHorizontalGroup(
            login_splash1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 384, Short.MAX_VALUE)
        );
        login_splash1Layout.setVerticalGroup(
            login_splash1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        roundButton1.setBackground(new java.awt.Color(0, 204, 0));
        roundButton1.setForeground(new java.awt.Color(255, 255, 255));
        roundButton1.setText("Login");
        roundButton1.setFont(new java.awt.Font("MS Reference Sans Serif", 0, 17)); // NOI18N
        roundButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roundButton1ActionPerformed(evt);
            }
        });

        roundTextField1.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout background1Layout = new javax.swing.GroupLayout(background1);
        background1.setLayout(background1Layout);
        background1Layout.setHorizontalGroup(
            background1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, background1Layout.createSequentialGroup()
                .addGroup(background1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(background1Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(background1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(background1Layout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addGroup(background1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3)))
                    .addGroup(background1Layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addGroup(background1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(roundPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(roundTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(background1Layout.createSequentialGroup()
                        .addGap(101, 101, 101)
                        .addComponent(roundButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(69, 69, 69)
                .addComponent(login_splash1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        background1Layout.setVerticalGroup(
            background1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(background1Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 3, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(57, 57, 57)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(roundTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(roundPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addComponent(roundButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(52, Short.MAX_VALUE))
            .addComponent(login_splash1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(background1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(background1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void roundButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roundButton1ActionPerformed
        String username = roundTextField1.getText();
        String password = String.valueOf(roundPasswordField1.getPassword());

        if (usernameValidate(username)) {
            return;
        } else if (!passwordValidate(password)) {

            try {

                ResultSet details = Mysql.search("SELECT * FROM `login` "
                        + "WHERE `username`='" + username + "' AND `password`='" + password + "' ");
                if (details.next()) {

                    ResultSet user = Mysql.search("SELECT * FROM `user`"
                            + "INNER JOIN `status` ON `user`.`status_id`=`status`.`id` "
                            + "INNER JOIN `user_type` ON `user`.`user_type_id`=`user_type`.`id`"
                            + "WHERE `user`.`id`='" + details.getString("user_id") + "' ");

                    if (user.next()) {

                        if (user.getString("status.name").equals(Valid_Status.ACTIVE.name())) {

                            if (user.getString("user_type.type").equals(Valid_User.ADMIN.name())) {
                                USER_ID = user.getString("user.id");
                                USER_TYPE=Valid_User.ADMIN.name();
                                new AdminDashboard_1().setVisible(true);

                                this.dispose();

                            } else if (user.getString("user_type.type").equals(Valid_User.CASHIER.name())) {
                                USER_ID = user.getString("user.id");
                                USER_TYPE=Valid_User.CASHIER.name();
                                new CashierDashboard_1().setVisible(true);

                                this.dispose();
                            } else {
                                Notifications.getInstance().show(Notifications.Type.SUCCESS,
                                        Notifications.Location.TOP_CENTER, "Error. Invalid User");
                            }
                        } else {
                            Notifications.getInstance().show(Notifications.Type.WARNING,
                                    Notifications.Location.TOP_CENTER, "Your session is not active. Please Contact the administrator");
                        }
                    } else {
                        Notifications.getInstance().show(Notifications.Type.WARNING,
                                Notifications.Location.TOP_CENTER, "Error. Invalid User");
                    }

                } else {
                    Notifications.getInstance().show(Notifications.Type.WARNING,
                            Notifications.Location.TOP_CENTER, "Invalid Username or Password");
                }
            } catch (SQLException e) {
//                e.printStackTrace();
                Logger.AdminlLog(String.valueOf(e));
            }

        }
    }//GEN-LAST:event_roundButton1ActionPerformed

    private boolean usernameValidate(String value) {
        if (value.isEmpty()) {
            Notifications.getInstance().show(Notifications.Type.WARNING, Notifications.Location.TOP_CENTER,
                    "Username is not filled");
            return true;
        } else if (value.length() < 3) {
            Notifications.getInstance().show(Notifications.Type.WARNING, Notifications.Location.TOP_CENTER,
                    "Username cannot be shorter than 3 characters");
            return true;
        }
        return false;
    }

    private boolean passwordValidate(String password) {
        if (password.isEmpty()) {
            Notifications.getInstance().show(Notifications.Type.WARNING,
                    Notifications.Location.TOP_CENTER, "Password is not filled");

            return true;
        } else if (!password.matches(Validation.PASSWORD_VALIDATION.validate())) {
            Notifications.getInstance().show(Notifications.Type.WARNING,
                    Notifications.Location.TOP_CENTER, "Password is not Valid."
                    + "Your password should include atleast one special character,"
                    + "capital letter,simple letter,numver");
            return true;
        }
        return false;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        FlatMacLightLaf.setup();

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Login().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private lk.styrox.pharma_care.main_components.Background background1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JSeparator jSeparator1;
    private lk.styrox.pharma_care.sub_components.Login_splash login_splash1;
    private lk.styrox.pharma_care.main_components.roundButton roundButton1;
    private lk.styrox.pharma_care.main_components.roundPasswordField roundPasswordField1;
    private lk.styrox.pharma_care.main_components.roundTextField roundTextField1;
    // End of variables declaration//GEN-END:variables
}
